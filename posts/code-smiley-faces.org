#+OPTIONS: toc:nil
#+begin_src yaml :exports results :results value html
---
title: "Syntactically Correct Smiley Faces"
date: "<2021-08-08 Sun>"
---
#+end_src

This post will attempt to answer the question on everyone's minds: How
can I use smiley faces in my code? Apart from the obvious smiley faces
you can put in comments and strings, here's what I've found:

* Python

Unfortunately the closest I could find for Python was with slicing:

#+begin_src python
l = [1, 2, 3]
l[1:] # :]
l[:1] # [:
#+end_src

Eveywhere else in Python the round bracket and colon end up being in
the wrong order :(. For example ~def f():~, or ~[1,2,3][1:(2+3)]~.

* Haskell

Haskell's list data constructor is ~:~, so we can do:

#+begin_src haskell
λ> (:) 'V' "alid Smiley"
"Valid Smiley"
#+end_src

You can also make your own functions or data constructors, for
example here's a smiley function with a curly tuft of hair:

#+begin_src haskell
(@:) :: String -> String
(@:) s = s ++ " @:)"
#+end_src

#+begin_src haskell
λ> (@:) "Hi!"
"Hi! @:)"
#+end_src

Unfortunately it seems the smiley bracket can't be a part of the
function/constructor name itself, we just have to make sure we use the
function in prefix notation :(.

Haskell's multi-line comments give us some smiling/squeamish [[https://www.merriam-webster.com/words-at-play/how-to-pluralize-cyclops-cyclopes][cyclopes]]:

#+begin_src haskell
{-
Smiling cyclopes
-}
#+end_src
